- name: message
  debug:
    msg: "******************************start install kubeedge******************************"

- name: set MASTER_IP
  set_fact:
    MASTER_IP: "{{ hostvars[groups['master'][0]]['ansible_default_ipv4']['address'] }}"

- name: copy cloudcore
  copy:
   src: "{{resource_dir}}/linux_{{ansible_architecture}}/{{ item }}"
   dest: "/usr/local/bin/{{ item }}"
   mode: "0750"
  with_items:
   - cloudcore

- name: copy cloudcore.service
  copy:
   src: "{{role_path}}/files/{{ item }}"
   dest: "/lib/systemd/system"
   mode: "0750"
  with_items:
   - cloudcore.service

- name: make directory
  file:
    path: "{{ item }}"
    state: directory
    mode: 0750
  with_items:
    - /etc/kubeedge/config
    - /etc/kubeedge/yamls

- name: copy k8s yamls
  copy:
   src: "{{role_path}}/files/{{ item }}"
   dest: /etc/kubeedge/yamls
   mode: "0640"
  with_items:
   - devices_v1alpha1_device.yaml
   - devices_v1alpha1_devicemodel.yaml
   - cluster_objectsync_v1alpha1.yaml
   - objectsync_v1alpha1.yaml
   - router_v1_rule.yaml
   - router_v1_ruleEndpoint.yaml

- name: generate cert and default config
  shell: |
    bash {{role_path}}/files/certgen.sh genCertAndKey server /etc/kubeedge/certs {{ MASTER_IP }}
    /usr/local/bin/cloudcore --defaultconfig > /etc/kubeedge/config/cloudcore.yaml

- name: apply kubeedge yamls
  shell: "kubectl apply -f /etc/kubeedge/yamls/{{ item }}"
  with_items:
   - devices_v1alpha1_device.yaml
   - devices_v1alpha1_devicemodel.yaml
   - cluster_objectsync_v1alpha1.yaml
   - objectsync_v1alpha1.yaml
   - router_v1_rule.yaml
   - router_v1_ruleEndpoint.yaml
  environment:
    http_proxy: ""
    https_proxy: ""
    HTTP_PROXY: ""
    HTTPS_PROXY: ""

- name: start cloudcore
  systemd:
    name: cloudcore
    enabled: true
    state: started
