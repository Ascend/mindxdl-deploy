- debug:
    msg: "******************************start install harbor******************************"

- name: install docker-compose
  copy:
    src: "{{ resource_dir }}/linux_{{ ansible_architecture }}/docker-compose"
    dest: "/usr/bin/docker-compose"
    mode: "0750"
    remote_src: yes

- name: find harbor-offline-installer-*.tgz
  find:
    paths: "{{ resource_dir }}"
    recurse: no
    file_type: file
    patterns: "harbor-offline-installer-{{ harbor_flag }}*.tgz"
  register: harbor

- name: unarchive harbor
  ansible.builtin.unarchive:
    src: "{{ harbor.files[0].path }}"
    dest: "{{ resource_dir }}/linux_{{ ansible_architecture }}"
    mode: 0750
    remote_src: yes

- name: copy harbor.yml.tmpl
  copy:
    src: "{{ resource_dir }}/linux_{{ ansible_architecture }}/harbor/harbor.yml.tmpl"
    dest: "{{ resource_dir }}/linux_{{ ansible_architecture }}/harbor/harbor.yml"
    mode: 0640
    remote_src: yes

- name: set hostname in harbor.yml
  ansible.builtin.lineinfile:
    path: "{{ resource_dir }}/linux_{{ ansible_architecture }}/harbor/harbor.yml"
    regexp: '^hostname:.*'
    line: "hostname: {{ host_ip }}"

- name: set certificate in harbor.yml
  ansible.builtin.lineinfile:
    path: "{{ resource_dir }}/linux_{{ ansible_architecture }}/harbor/harbor.yml"
    regexp: '^  certificate:.*'
    line: "  certificate: {{ certificate_path }}"

- name: set private_key in harbor.yml
  ansible.builtin.lineinfile:
    path: "{{ resource_dir }}/linux_{{ ansible_architecture }}/harbor/harbor.yml"
    regexp: '^  private_key:.*'
    line: "  private_key: {{ key_path }}"

- name: set data_volume in harbor.yml
  ansible.builtin.lineinfile:
    path: "{{ resource_dir }}/linux_{{ ansible_architecture }}/harbor/harbor.yml"
    regexp: '^data_volume:.*'
    line: "data_volume: {{ data_path }}"

- name: create https_config.sh
  template:
    src: https_config.sh
    dest: "{{ role_path }}/https_config.sh"
    mode: 0640

- name: execute https_config.sh
  shell : "bash {{ role_path }}/https_config.sh"

- name: "restart docker"
  systemd:
    name: "docker"
    enabled: true
    state: restarted

- name: execute harbor install.sh
  shell: |
    docker-compose down -v
    bash install.sh
  args:
    chdir: "{{ resource_dir }}/linux_{{ ansible_architecture }}/harbor"

- name: check namespace
  shell: "kubectl get namespace | awk '$1 ~ /^{{ k8s_namespace }}$/ {print $1}'"
  environment:
    http_proxy: ""
    https_proxy: ""
    HTTP_PROXY: ""
    HTTPS_PROXY: ""
  changed_when: false
  register: get_namespace

- name: create namespace
  shell: "kubectl create namespace {{ k8s_namespace }}"
  environment:
    http_proxy: ""
    https_proxy: ""
    HTTP_PROXY: ""
    HTTPS_PROXY: ""
  when: get_namespace.stdout != k8s_namespace

- name: create secret for harbor
  shell: |
    kubectl delete secret --namespace={{ k8s_namespace }} harbor-secret
    kubectl create secret \
    --namespace={{ k8s_namespace }} \
    generic harbor-secret \
    --from-literal='connection-path=admin:Harbor12345@tcp({{ host_ip }}:443)'
  environment:
    http_proxy: ""
    https_proxy: ""
    HTTP_PROXY: ""
    HTTPS_PROXY: ""
