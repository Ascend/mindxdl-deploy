- name: message
  debug:
    msg: "******************************start init k8s on master******************************"

- name: message
  debug:
    msg: "master must be localhost in inventory_file, please check"
  failed_when: true
  when: "'master' not in groups or groups['master'] | length != 1 or groups['master'][0] != 'localhost'"

- name: check k8s
  shell: "kubectl cluster-info | grep 'is running at' | wc -l"
  environment:
    http_proxy: ""
    https_proxy: ""
    HTTP_PROXY: ""
    HTTPS_PROXY: ""
  register: cluster_info

- name: message
  debug:
    msg: "k8s is running already, please check"
  failed_when: true
  when: cluster_info.stdout != "0"

- name: not apiserver_advertise_address
  set_fact:
    addr_cmd: ""
    repo_cmd: ""
    control_plane_cmd: ""

- name: set apiserver_advertise_address
  set_fact:
    addr_cmd: "--apiserver-advertise-address={{ K8S_API_SERVER_IP }}"
  when:
    - K8S_API_SERVER_IP != ""

- name: set control-plane-endpoint
  set_fact:
    control_plane_cmd: '--control-plane-endpoint "{{ KUBE_VIP }}:6443" --upload-certs'
  when:
    - "'master_backup' in groups"
    - "groups['master_backup'] | length != 0"

- name: load k8s images on master
  shell: "docker load -i {{ item }}"
  with_fileglob:
    - "{{ k8s_image }}/calico*.tar.gz"
    - "{{ k8s_image }}/kube*.tar.gz"
    - "{{ k8s_image }}/coredns*.tar.gz"
    - "{{ k8s_image }}/etcd*.tar.gz"
    - "{{ k8s_image }}/pause*.tar.gz"

- name: init cluster by kubeadm init
  shell: >
    kubeadm init
    --kubernetes-version={{ kubernetes_version }}
    --node-name={{ NODE_NAME }}
    --pod-network-cidr={{ POD_NETWORK_CIDR }}
    {{ addr_cmd }} {{ control_plane_cmd }}
  environment:
    http_proxy: ""
    https_proxy: ""
    HTTP_PROXY: ""
    HTTPS_PROXY: ""

- name: create home kube directory
  file:
    path: "{{ ansible_env.HOME }}/.kube"
    state: directory
    mode: 0750

- name: set cluster config
  copy:
    src: /etc/kubernetes/admin.conf
    dest: "{{ ansible_env.HOME }}/.kube/config"
    mode: "0640"
    remote_src: yes

- name: remove coredns loop param
  shell: "kubectl get cm -n kube-system coredns -oyaml | sed '/loop/d' | kubectl apply -f -"
  environment:
    http_proxy: ""
    https_proxy: ""
    HTTP_PROXY: ""
    HTTPS_PROXY: ""

- name: create deploy directory on host
  file:
    path: "{{ CALICO_YAML_DIR }}"
    state: directory
    mode: 0750

- name: set calico yaml
  template:
    src: "../../templates/calico_{{calico_version}}.yaml"
    dest: "{{ CALICO_YAML_DIR }}/calico_{{calico_version}}.yaml"
    mode: 0640

- name: apply calico
  shell: "kubectl apply -f {{ CALICO_YAML_DIR }}/calico_{{calico_version}}.yaml"
  environment:
    http_proxy: ""
    https_proxy: ""
    HTTP_PROXY: ""
    HTTPS_PROXY: ""

- name: taint nodes
  shell: kubectl taint nodes --all node-role.kubernetes.io/master-
  environment:
    http_proxy: ""
    https_proxy: ""
    HTTP_PROXY: ""
    HTTPS_PROXY: ""
