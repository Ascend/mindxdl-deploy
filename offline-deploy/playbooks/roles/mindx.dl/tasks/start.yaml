- name: include vars
  include_vars: ../defaults/main.yml

- name: create mindx-dl namespace
  shell: "kubectl create namespace {{ K8S_NAMESPACE }}"
  environment:
    http_proxy: ""
    https_proxy: ""
    HTTP_PROXY: ""
    HTTPS_PROXY: ""
  ignore_errors: true
  when:
    - ansible_connection == "local"

- name: list yamls
  command: "ls {{YAMLS_DIR}}"
  register: all_yamls

# 先不执行device plugin的yaml
- name: apply yamls one
  shell: kubectl apply -f {{YAMLS_DIR}}/{{item}};
  loop: "{{ all_yamls.stdout_lines }}"
  environment:
    http_proxy: ""
    https_proxy: ""
    HTTP_PROXY: ""
    HTTPS_PROXY: ""
  when:
    - all_yamls.stdout_lines | length > 0
    - item.count("device-plugin") == 0
    - item.count("without") == 0

# 执行device plugin的yaml
- name: apply device plugin 310P yaml
  shell:
    cmd:
      ((kubectl get nodes --show-labels | grep "huawei-Ascend310P" 1>/dev/null) && (ls {{YAMLS_DIR}}/*310P-volcano*yaml | head -n 1 | xargs -n 1 kubectl apply -f)) || true
  environment:
    http_proxy: ""
    https_proxy: ""
    HTTP_PROXY: ""
    HTTPS_PROXY: ""
  when:
    - all_yamls.stdout_lines | length > 0

- name: apply device plugin 310 yaml
  shell:
    cmd:
      ((kubectl get nodes --show-labels | grep -w "huawei-Ascend310" 1>/dev/null) && (ls {{YAMLS_DIR}}/*310-volcano*yaml | head -n 1 | xargs -n 1 kubectl apply -f)) || true
  environment:
    http_proxy: ""
    https_proxy: ""
    HTTP_PROXY: ""
    HTTPS_PROXY: ""
  when:
    - all_yamls.stdout_lines | length > 0

- name: apply device plugin 910 yaml
  shell:
    cmd:
      ((kubectl get nodes --show-labels | grep "huawei-Ascend910" 1>/dev/null) && (ls {{YAMLS_DIR}}/device-plugin-volcano*yaml | head -n 1 | xargs -n 1 kubectl apply -f)) || true
  environment:
    http_proxy: ""
    https_proxy: ""
    HTTP_PROXY: ""
    HTTPS_PROXY: ""
  when:
    - all_yamls.stdout_lines | length > 0