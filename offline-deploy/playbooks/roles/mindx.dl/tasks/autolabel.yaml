- name: label huawei-x86
  shell: kubectl label --overwrite node {{ NODE_NAME }} host-arch=huawei-x86
  delegate_to: "{{ groups['master'][0] }}"
  delegate_facts: true
  environment:
    http_proxy: ""
    https_proxy: ""
    HTTP_PROXY: ""
    HTTPS_PROXY: ""
  when: ansible_architecture == "x86_64"

- name: label huawei-arm
  shell: kubectl label --overwrite node {{ NODE_NAME }} host-arch=huawei-arm
  delegate_to: "{{ groups['master'][0] }}"
  delegate_facts: true
  environment:
    http_proxy: ""
    https_proxy: ""
    HTTP_PROXY: ""
    HTTPS_PROXY: ""
  when: ansible_architecture == "aarch64"

- name: check product name
  shell: dmidecode -t 1 | grep "Product Name"
  register: product_name
  ignore_errors: yes

- name: check device
  shell: lspci | grep "Processing accelerators"
  register: processing_accelerator
  ignore_errors: yes

- name: message
  debug:
    msg: "can not find npu card, please check"
  when: processing_accelerator.rc != 0

- name: label ascend310
  shell: kubectl label --overwrite node {{ NODE_NAME }} accelerator=huawei-Ascend310
  delegate_to: "{{ groups['master'][0] }}"
  delegate_facts: true
  environment:
    http_proxy: ""
    https_proxy: ""
    HTTP_PROXY: ""
    HTTPS_PROXY: ""
  when: "'Device d100' in processing_accelerator.stdout"

- name: label ascend310P
  shell: kubectl label --overwrite node {{ NODE_NAME }} accelerator=huawei-Ascend310P
  delegate_to: "{{ groups['master'][0] }}"
  delegate_facts: true
  environment:
    http_proxy: ""
    https_proxy: ""
    HTTP_PROXY: ""
    HTTPS_PROXY: ""
  when: "'Device d500' in processing_accelerator.stdout"

- name: label ascend910
  shell: kubectl label --overwrite node {{ NODE_NAME }} accelerator=huawei-Ascend910
  delegate_to: "{{ groups['master'][0] }}"
  delegate_facts: true
  environment:
    http_proxy: ""
    https_proxy: ""
    HTTP_PROXY: ""
    HTTPS_PROXY: ""
  when: "'Device d801' in processing_accelerator.stdout"

- name: label 300T
  shell: kubectl label --overwrite node {{ NODE_NAME }} accelerator-type=card
  delegate_to: "{{ groups['master'][0] }}"
  delegate_facts: true
  environment:
    http_proxy: ""
    https_proxy: ""
    HTTP_PROXY: ""
    HTTPS_PROXY: ""
  when:
    - "'Device d801' in processing_accelerator.stdout"
    - "'Atlas' not in product_name.stdout"

- name: label worker
  shell: |
    kubectl label --overwrite node {{ NODE_NAME }} node-role.kubernetes.io/worker=worker
    kubectl label --overwrite node {{ NODE_NAME }} workerselector=dls-worker-node
  environment:
    http_proxy: ""
    https_proxy: ""
    HTTP_PROXY: ""
    HTTPS_PROXY: ""
  delegate_to: "{{ groups['master'][0] }}"
  delegate_facts: true
  when:
    - inventory_hostname in groups['worker']

- name: label dls master
  shell: |
    kubectl label --overwrite node {{ NODE_NAME }} masterselector=dls-master-node
  environment:
    http_proxy: ""
    https_proxy: ""
    HTTP_PROXY: ""
    HTTPS_PROXY: ""
  when:
    - inventory_hostname in groups['master_backup'] or inventory_hostname in groups['master']